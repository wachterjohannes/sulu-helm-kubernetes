# Default values for sulu.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

varnish:
  enabled: true
  service:
    type: LoadBalancer
    port: 80
  image:
    repository: varnish
    tag: latest
    pullPolicy: IfNotPresent
  resources: {}

sulu:
  replicaCount: 3
  service:
    type: NodePort
    port: 8080
  image:
    repository: sulu
    tag: latest
    pullPolicy: IfNotPresent
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  persistence:
    enabled: true
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi
    annotations: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  env: prod
  email: info@example.com
  secret: ThisSecretIsNoSoSecretAsItCould

mysql:
  enabled: true
  imageTag: 5.7.19
  mysqlUser: sulu
  # Secret will be recreated on upgrade
  # https://github.com/helm/charts/issues/5167
  mysqlPassword: sulu
  mysqlDatabase: sulu
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 8Gi

redis:
  # Secret will be recreated on upgrade
  # https://github.com/helm/charts/issues/5167
  password: sulu
  cluster:
    enabled: false

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
